/* S3: Lunch Concert
    0/10 
    Next Steps: Passed all practice test cases, but failed proper test cases. Unsure why my answer was reported as wrong.

*/

import java.util.*;

public class Main {
  public static void main(String[] args) {
    Scanner s = new Scanner(System.in);
    // number of friends
    long n = s.nextLong();
    s.nextLine();
    long[] p = new long[(int)n];
    long[] w = new long[(int)n];
    long[] d = new long[(int)n];
    // find optimal number
    long sum = 0;
    for (long i = 0; i < n; i++) {
      p[(int)i] = s.nextLong();
      w[(int)i] = s.nextLong();
      d[(int)i] = s.nextLong();
      s.nextLine();
    }

    // brute force this part
    long max = Long.MIN_VALUE;
    long c = 0;
    for (long i = 0; i < n; i++) {
      c += p[(int)i];
      if (max < p[(int)i]) max = p[(int)i];
    }
    c = c/n;
    long store = c;


    // now calculate based on time
    long ans = Long.MAX_VALUE;
    // check for values above average
    for (long i = c; i <= max*3; i++, c++) {
      long time = 0;
      for (long j = 0; j < n; j++) {
          if ((Math.abs(p[(int)j] - c) > d[(int)j])) {
              time += (Math.abs(p[(int)j] - c) - d[(int)j]) * w[(int)j];
          }
      }
      if (ans > time) {
        ans = time;
      }
    }
    // check for values below average
    for (long i = 0; i <= store; i++) {
      long time = 0;
      for (long j = 0; j < n; j++) {
          if ((Math.abs(p[(int)j] - c) > d[(int)j])) {
              time += (Math.abs(p[(int)j] - c) - d[(int)j]) * w[(int)j];
          }
      }
      if (ans > time) {
        ans = time;
      }
    }


    System.out.println(ans);

  }
}
